#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Software License Agreement (BSD License)
#
# Copyright (c) 2009-2011, Eucalyptus Systems, Inc.
# All rights reserved.
#
# Redistribution and use of this software in source and binary forms, with or
# without modification, are permitted provided that the following conditions
# are met:
#
#   Redistributions of source code must retain the above
#   copyright notice, this list of conditions and the
#   following disclaimer.
#
#   Redistributions in binary form must reproduce the above
#   copyright notice, this list of conditions and the
#   following disclaimer in the documentation and/or other
#   materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Author: Neil Soman neil@eucalyptus.com
#         Mitch Garnaat mgarnaat@eucalyptus.com

import euca2ools.controller
import euca2ools.exceptions

USAGE = \
"""
Shows information about groups.

euca-describe-groups [-h, --help] [--version] [--debug] [group1 group2...groupN] 

OPTIONAL PARAMETERS

group1 group2...groupN		groups to describe. 

"""

def display_groups(groups):
    for group in groups:
        group_string = '%s\t%s\t%s' % (group.owner_id, group.name,
                group.description)
        print 'GROUP\t%s' % group_string
        for rule in group.rules:
            permission_string = '%s\t%s\tALLOWS\t%s\t%s\t%s' \
                % (group.owner_id, group.name, rule.ip_protocol,
                   rule.from_port, rule.to_port)
            for grant in rule.grants:
                grant_string = '\tFROM'
                if grant.owner_id or grant.name:
                    if grant.owner_id:
                        grant_string = '\tUSER\t%s' % grant.owner_id
                    if grant.name:
                        grant_string = '\tGRPNAME\t%s' % grant.name
                else:
                    grant_string += '\tCIDR\t%s' % grant.cidr_ip
                permission_string += grant_string
                print 'PERMISSION\t%s' % permission_string

def main():
    controller = euca2ools.controller.Controller(cmd_usage=USAGE)
    euca_conn = controller.make_connection_cli()
    groups = controller.make_request_cli(euca_conn,
                                         'get_all_security_groups',
                                         groupnames=controller.args)

    display_groups(groups)

if __name__ == '__main__':
    main()

