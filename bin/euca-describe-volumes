#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Software License Agreement (BSD License)
#
# Copyright (c) 2009-2011, Eucalyptus Systems, Inc.
# All rights reserved.
#
# Redistribution and use of this software in source and binary forms, with or
# without modification, are permitted provided that the following conditions
# are met:
#
#   Redistributions of source code must retain the above
#   copyright notice, this list of conditions and the
#   following disclaimer.
#
#   Redistributions in binary form must reproduce the above
#   copyright notice, this list of conditions and the
#   following disclaimer in the documentation and/or other
#   materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Author: Neil Soman neil@eucalyptus.com
#         Mitch Garnaat mgarnaat@eucalyptus.com

import euca2ools.controller

USAGE = """
Shows information about volumes.

euca-describe-volumes [-h, --help] [--version] [--debug]
[volume1 volume2...volumeN] 

OPTIONAL PARAMETERS

volume1 volume2...volumeN	volumes to describe. 

--filter                        A filter for limiting results.  Can be
                                specified multiple times.

"""

def display_volumes(volumes):
    for volume in volumes:
        volume_string = '%s\t ' % volume.id
        if volume.size:
            volume_string += '%d' % volume.size
        if volume.snapshot_id:
            volume_string += '\t%s' % volume.snapshot_id
        else:
            volume_string += '\t'

        az = getattr(volume, 'availabilityZone', object)
        if az is object:
            az = volume.zone
        if az:
            volume_string += '\t%s' % az

        volume_string += '\t%s\t%s' % (volume.status,
                volume.create_time)
        print 'VOLUME\t%s' % volume_string
        if volume.status == 'in-use':
            attachment_string = '%s\t%s\t%s\t%s' % (volume.id,
                    volume.attach_data.instance_id,
                    volume.attach_data.device,
                    volume.attach_data.attach_time)
            print 'ATTACHMENT\t%s' % attachment_string

def main():
    controller = euca2ools.controller.Controller(long_opts=['filter='],
                                                 cmd_usage=USAGE)
    for volume_id in controller.args:
        controller.validate_volume_id(volume_id)
    euca_conn = controller.make_connection_cli()
    volumes = controller.make_request_cli(euca_conn,
                                          'get_all_volumes',
                                          volume_ids=controller.args)
    display_volumes(volumes)

if __name__ == '__main__':
    main()

